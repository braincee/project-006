import FunctionContainer from '@/components/FunctionContainer'

import { Stack, Typography } from '@mui/joy'

export default async function Web3JsFunctionPage() {
    return (
        <Stack
            direction={{ xs: 'column', md: 'column' }}
            sx={{
                height: '100%',
                width: '100%',
            }}
            spacing={2}
        >
            <Typography level="h1">VerifyMessage</Typography>
            <Typography level="h2">The VerifyMessage function.</Typography>
            <Typography level="body-md">
               To verify a message signed by a provided address, 
               you can use the verifyMessage utility function from the viem library. 
               Here's an example of how to use it:

               <pre>{`typescript
                import { verifyMessage } from 'viem';
                import { account, walletClient } from './client';

                const signature = await walletClient.signMessage({
                account,
                message: 'hello world',
                });

                const valid = await verifyMessage({
                address: account.address,
                message: 'hello world',
                signature,
                });

                // true`}</pre>
            </Typography>
            <Typography level="body-md">
               The verifyMessage function takes three parameters:

               <ul>
                <li><strong>address:</strong> The Ethereum address that signed the original message.</li>
                <li><strong>message:</strong> The message to be verified. By default, viem signs the UTF-8 representation of the message.</li>
                <li><strong>signature:</strong> The signature that was generated by signing the message with the address's private key.</li>
               </ul>
            </Typography>
            <Typography level="body-md">
                Here's the type definition for the verifyMessage function:

                {`typescript
                export async function verifyMessage({ address, message, signature }: { address: Address; message: string; signature: Hex | ByteArray }): Promise<boolean> {
                // ...
                }
                `}
            </Typography>
            <Typography level="body-md">
            Keep in mind that this utility function can only verify a message that was signed by an Externally Owned Account (EOA). 
            To verify messages from Contract Accounts (& EOA), use the <strong>publicClient.verifyMessage</strong> action instead.
            </Typography>
            <Stack
                direction={{ xs: 'column', md: 'column' }}
                sx={{
                    height: '100%',
                    width: '100%',
                }}
                overflow={'scroll'}
                spacing={2}
            >
            </Stack>
        </Stack>
    )
}
